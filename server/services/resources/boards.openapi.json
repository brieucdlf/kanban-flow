{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Boards",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [{
    "url": "http://petstore.swagger.io/"
  }],
  "paths": {
    "/boards/{id}": {
      "get": {
        "summary": "Get a board data",
        "operationId": "Boards.api.read",
        "tags": ["boards"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id (URI) of the board to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            },
            "links": {
              "containsTasksList": {
                "operationId": "Tasks.api.search",
                "parameters": {
                  "boardId": "$response.body#/id"
                }
              },
              "creator": {
                "operationId": "Users.api.read",
                "parameters": {
                  "id": "$response.body#/createdBy"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "update a board",
        "operationId": "Boards.api.update",
        "tags": ["boards"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id (URI) of the board to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete a board",
        "operationId": "Boards.api.delete",
        "tags": ["boards"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id (URI) of the board to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          }
        }
      }
    },
    "/boards": {
      "get": {
        "summary": "List all boards",
        "operationId": "Boards.api.search",
        "tags": ["boards"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the list by this property",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Sort the list by this property",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Sort the list by this property",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Sort the list by this property",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "List all the by created by the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boards"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a board",
        "operationId": "Boards.api.create",
        "tags": ["boards"],
        "responses": {
          "201": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InputBoard": {
        "oneOf": [
          {"$ref": "#/components/schemas/Board"},
          {"$ref": "#/components/schemas/Boards"}
        ]
      },
      "Board": {
        "type": "object",
        "description": "Properties for each board",
        "required" : ["id", "title", "createdBy", "dateOfCreation"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "readOnly": true
          },
          "title": {
            "type": "string"
          },
          "tag": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "x-entity": "Users:id"
          },
          "dateOfCreation": {
            "description": "The resource creation date",
            "type": "string",
            "pattern": "(/[a-zA-Z0-9\\-_\\.])+",
            "default": "$now()",
            "readOnly": true
          }
        }
      },
      "Boards": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Board"
        }
      }
    }
  }
}
